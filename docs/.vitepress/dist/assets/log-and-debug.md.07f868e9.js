import{_ as s,o as a,c as n,O as l}from"./chunks/framework.571309da.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"log-and-debug.md","filePath":"log-and-debug.md"}'),o={name:"log-and-debug.md"},e=l(`<h2 id="log-and-debug" tabindex="-1">Log and debug <a class="header-anchor" href="#log-and-debug" aria-label="Permalink to &quot;Log and debug&quot;">​</a></h2><p>⬆️ <a href="./README.html#laravel-tips">Go to main menu</a> ⬅️ <a href="./factories.html">Previous (Factories)</a> ➡️ <a href="./api.html">Next (API)</a></p><ul><li><a href="#logging-with-parameters">Logging with parameters</a></li><li><a href="#log-long-running-laravel-queries">Log Long Running Laravel Queries</a></li><li><a href="#benchmark-class">Benchmark class</a></li><li><a href="#more-convenient-dd">More convenient DD</a></li><li><a href="#log-with-context">Log with context</a></li><li><a href="#quickly-output-an-eloquent-query-in-its-sql-form">Quickly output an Eloquent query in its SQL form</a></li><li><a href="#log-all-the-database-queries-during-development">Log all the database queries during development</a></li><li><a href="#discover-all-events-fired-in-one-request">Discover all events fired in one request</a></li></ul><h3 id="logging-with-parameters" tabindex="-1">Logging with parameters <a class="header-anchor" href="#logging-with-parameters" aria-label="Permalink to &quot;Logging with parameters&quot;">​</a></h3><p>You can write <code>Log::info()</code>, or shorter <code>info()</code> message with additional parameters, for more context about what happened.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Log</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">User failed to login.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">user</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">]);</span></span></code></pre></div><h3 id="log-long-running-laravel-queries" tabindex="-1">Log Long Running Laravel Queries <a class="header-anchor" href="#log-long-running-laravel-queries" aria-label="Permalink to &quot;Log Long Running Laravel Queries&quot;">​</a></h3><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">DB</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">enableQueryLog</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">DB</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">whenQueryingForLongerThen</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">connection</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#FFCB6B;">Log</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">warning</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Long running queries have been detected.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">connection</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">getQueryLog</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre></div><p>Tip given by <a href="https://twitter.com/realstevebauman/status/1576980397552185344" target="_blank" rel="noreferrer">@realstevebauman</a></p><h3 id="benchmark-class" tabindex="-1">Benchmark class <a class="header-anchor" href="#benchmark-class" aria-label="Permalink to &quot;Benchmark class&quot;">​</a></h3><p>In Laravel 9.32 we have a Benchmark class that can measure the time of any task.</p><p>It&#39;s a pretty useful helper:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">OrderController</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">index</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Benchmark</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">measure</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">fn</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Order</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">all</span><span style="color:#89DDFF;">()),</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Tip given by <a href="https://twitter.com/mmartin_joo/status/1583096196494553088" target="_blank" rel="noreferrer">@mmartin_joo</a></p><h3 id="more-convenient-dd" tabindex="-1">More convenient DD <a class="header-anchor" href="#more-convenient-dd" aria-label="Permalink to &quot;More convenient DD&quot;">​</a></h3><p>Instead of doing <code>dd($result)</code> you can put <code>-&gt;dd()</code> as a method directly at the end of your Eloquent sentence, or any Collection.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Instead of</span></span>
<span class="line"><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">users </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">where</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Taylor</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#82AAFF;">dd</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">users</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Do this</span></span>
<span class="line"><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">users </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">User</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">where</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Taylor</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">dd</span><span style="color:#89DDFF;">();</span></span></code></pre></div><h3 id="log-with-context" tabindex="-1">Log with context <a class="header-anchor" href="#log-with-context" aria-label="Permalink to &quot;Log with context&quot;">​</a></h3><p>New in Laravel 8.49: <code>Log::withContext()</code> will help you to differentiate the Log messages between different requests.</p><p>If you create a Middleware and set this context, all Log messages will contain that context, and you&#39;ll be able to search them easier.</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">handle</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Request</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Closure</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">requestId </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Str</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">uuid</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">Log</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">withContext</span><span style="color:#89DDFF;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">request-id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">requestId</span><span style="color:#89DDFF;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">request</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">header</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">request-id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">requestId</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">response</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="quickly-output-an-eloquent-query-in-its-sql-form" tabindex="-1">Quickly output an Eloquent query in its SQL form <a class="header-anchor" href="#quickly-output-an-eloquent-query-in-its-sql-form" aria-label="Permalink to &quot;Quickly output an Eloquent query in its SQL form&quot;">​</a></h3><p>If you want to quickly output an Eloquent query in its SQL form, you can invoke the toSql() method onto it like so</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">invoices </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Invoice</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">where</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">client</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">James pay</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#82AAFF;">toSql</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">dd</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">invoices</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// select * from \`invoices\` where \`client\` = ?</span></span></code></pre></div><p>Tip given by <a href="https://twitter.com/devThaer/status/1438816135881822210" target="_blank" rel="noreferrer">@devThaer</a></p><h3 id="log-all-the-database-queries-during-development" tabindex="-1">Log all the database queries during development <a class="header-anchor" href="#log-all-the-database-queries-during-development" aria-label="Permalink to &quot;Log all the database queries during development&quot;">​</a></h3><p>If you want to log all the database queries during development add this snippet to your AppServiceProvider</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">boot</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">environment</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">local</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#FFCB6B;">DB</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">listen</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">query</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">logger</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Str</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">replaceArray</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">?</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">query</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">bindings</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">query</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">sql</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Tip given by <a href="https://twitter.com/mmartin_joo/status/1473262634405449730" target="_blank" rel="noreferrer">@mmartin_joo</a></p><h3 id="discover-all-events-fired-in-one-request" tabindex="-1">Discover all events fired in one request <a class="header-anchor" href="#discover-all-events-fired-in-one-request" aria-label="Permalink to &quot;Discover all events fired in one request&quot;">​</a></h3><p>If you want to implement a new listener to a specific event but you don&#39;t know its name, you can log all events fired during the request.</p><p>You can use the <code>\\Illuminate\\Support\\Facades\\Event::listen()</code> method on <code>boot()</code> method of <code>app/Providers/EventServiceProvider.php</code> to catch all events fired.</p><p><strong>Important:</strong> If you use the <code>Log</code> facade within this event listener then you will need to exclude events named <code>Illuminate\\Log\\Events\\MessageLogged</code> to avoid an infinite loop. (Example: <code>if ($event == &#39;Illuminate\\\\Log\\\\Events\\\\MessageLogged&#39;) return;</code>)</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Include Event...</span></span>
<span class="line"><span style="color:#F78C6C;">use</span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">Illuminate</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Support</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Facades</span><span style="color:#89DDFF;">\\</span><span style="color:#A6ACCD;">Event</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// In your EventServiceProvider class...</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">boot</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">parent</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">boot</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">Event</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">listen</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">array</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Log the event class</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">error_log</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// Log the event data delegated to listener parameters</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">error_log</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">json_encode</span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> JSON_PRETTY_PRINT</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">});</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Tip given by <a href="https://github.com/MuriloChianfa" target="_blank" rel="noreferrer">@MuriloChianfa</a></p>`,35),p=[e];function t(r,c,D,F,y,i){return a(),n("div",null,p)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
